---
import { Aside, Badge } from "@astrojs/starlight/components";
import { Debug } from "astro:components";
import type {
  ClassMember,
  ClassMethod,
  CustomElementField,
} from "custom-elements-manifest";
import { marked } from "marked";

export type Props = {
  items: ClassMethod[];
};

const { items } = Astro.props;
---

<h2 id="Methods">Methods</h2>

{
  items.length > 0 ? (
    <>
      {items.map((m) => {
        const {
          name,
          deprecated,
          description,
          return: returnType,
          parameters,
        } = m;
        const isDeprecated = deprecated || typeof deprecated === "string";
        const deprecationMessage =
          typeof deprecated === "string" ? marked(deprecated) : "";
        const deprecationMarkup = deprecationMessage ? (
          <Aside
            type="danger"
            title="Deprecation warning!"
            set:html={deprecationMessage}
          />
        ) : null;
        const returnTypeMarkup = returnType?.type?.text ? (
          <>
            : <code>{returnType.type.text}</code>
          </>
        ) : null;

        const parametersMarkup = parameters?.map((p, i) => {
          const { name, type } = p;
          const parameterType = type?.text ?? "";

          console.log(parameterType, typeof parameterType);

          return (
            <Fragment>
              {name}: <code>{parameterType}</code>
              {i < parameters.length - 1 ? ", " : ""}
            </Fragment>
          );
        });
        const descriptionMarkup = description ? (
          <Fragment set:html={marked(description)} />
        ) : (
          ""
        );

        return (
          <details>
            <summary>
              {name}({parametersMarkup}){returnTypeMarkup}
            </summary>
            <table>
              <tr>
                <th scope="row">Name</th>
                <td>{name}</td>
              </tr>
              <tr>
                <th scope="row">Description</th>
                <td>
                  {deprecationMarkup}
                  {descriptionMarkup}
                </td>
              </tr>
            </table>
          </details>
        );
      })}
    </>
  ) : null
}
