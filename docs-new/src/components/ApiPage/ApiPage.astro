---
import * as fs from "node:fs/promises";
import { Debug } from "astro:components";
import StarlightPage from "@astrojs/starlight/components/StarlightPage.astro";
import { getCustomElementDeclaration } from "./helpers";
import type { CustomElement, CustomElementField } from "custom-elements-manifest";

export type Props = {
  /** Custom Elements Manifest path */
  cemPath: string;
  tagName: string;
  title: string;
};

const { cemPath, tagName, title } = Astro.props;
const fc = await fs.readFile(cemPath, "utf-8");
const manifest = JSON.parse(fc);
const ceDeclaration = getCustomElementDeclaration(tagName);
---

<StarlightPage
  frontmatter={{ title: title }}
  headings={[
    { depth: 2, slug: "Properties", text: "Properties" },
    { depth: 2, slug: "Methods", text: "Methods" },
    { depth: 2, slug: "Events", text: "Events" },
    { depth: 2, slug: "Custom_CSS_Properties", text: "Custom CSS Properties" },
    { depth: 2, slug: "CSS_Parts", text: "CSS Parts" },
  ]}
>
  {
    ceDeclaration?.publicMembers
      ? ceDeclaration?.publicMembers.map((m) => {
          const { name, attribute } = m as CustomElementField;

          return (
            <details>
              <summary>{name}</summary>
              <table>
                <tr>
                  <th scope="row">Attribute</th>
                  <td>{attribute ? attribute : ""}</td>
                </tr>
              </table>
            </details>
          );
        })
      : null
  }
  <Debug dec={ceDeclaration} />
  <p>This is a custom page with a custom component:</p>
  <h2>Lorem</h2>
  <p>{cemPath}</p>
  <p>{tagName}</p>
</StarlightPage>
